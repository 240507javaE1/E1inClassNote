Ex9
class Base {
    // insert code here
}
 
public class Derived extends Base {
 
    public static void main(String[] args) {
        Derived obj = new Derived();
        obj.setNum(3);
        System.out.println("Square = " + obj.getNum() * obj.getNum());
    }
}

Which two options, when inserted independently inside class Base,ensure that the class is being properly encapsulated and allow the program to execute and print the square of the number?

A.
private int num; 
public int getNum() {
    return num;
} 
public void setNum(int num) {
    this.num = num;
}


B.
public int num; 
protected public int getNum() {
    return num;
} 
protected public void setNum(int num) {
    this.num = num;
}


C.
private int num; 
public int getNum() {
    return num;
} 
private void setNum(int num) {
    this.num = num;
}


D.
protected int num; 
public int getNum() {
    return num;
} 
public void setNum(int num) {
    this.num = num;
}


E.
protected int num; 
private int getNum() {
    return num;
} 
public void setNum(int num) {
    this.num = num;
}














Ex10
Given the code fragments:

public class Product{
	String name;
	Integer price;
	Product(String name,Integer price)
	{
		this.name=name;
		this.price=price;	
	}
	
	public void printVal(){ System.out.print(name+" Price:"+price+" ");}
	public void setPrice(int price){this.price=price;}

	public Integer getPrice() {
		return price;
	}
	
}

and

List<Product> li=Arrays.asList(new Product("TV",1000), new Product("Refrigerator",
2000));
Consumer<Product> raise=e->e.setPrice(e.getPrice()+100);
li.forEach(raise);
li.stream().forEach(Product::printVal);

What is the result?

A) A compilation error occurs.

B) TV Price :1000 Refrigerator price:2000

C) The program prints nothing.

D) TV Price:1100 Refrigerator Price:2100


